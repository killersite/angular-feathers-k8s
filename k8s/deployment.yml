apiVersion: extensions/v1beta1
kind: Deployment

metadata:
  name: angular-nginx # name of deployment 

spec:
  replicas: 1 # Run one instances of our application
  template: # create pods using pod definition in this template
    metadata:
      labels:
        app: angular-nginx
    spec:
      #Container details
      containers:
      - image: us.gcr.io/angular-feathers-test/angular-app:0.0.1
        name: angular-nginx
        imagePullPolicy: Never
        #Ports to expose
        ports:
          - containerPort: 80
          - containerPort: 443
      restartPolicy: Always

---

apiVersion: v1
kind: Service

metadata:
  name: angular-nginx-service # name of deployment

spec:
  selector:
    app: angular-nginx
  ports:
  - port: 80
    targetPort: 80
  # type: LoadBalancer
  type: NodePort
        
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: feathers
  name: feathers
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: feathers
    spec:
      containers:
      - image: us.gcr.io/angular-feathers-test/feathers-app:0.0.1
        name: feathers
        imagePullPolicy: Never
        ports:
        - containerPort: 3030
      restartPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: feathers
spec:
  ports:
  - port: 3030
    targetPort: 3030
  selector:
    app: feathers
  type: NodePort

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: angular-ingress
  annotations:
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/ingress.class: "gce"
    # ingress.kubernetes.io/rewrite-target: "/"
    # nginx.ingress.kubernetes.io/rewrite-target: "/"
    ## https://github.com/nginxinc/kubernetes-ingress
    # nginx.org/rewrites: "serviceName=angular-nginx-service rewrite=/;serviceName=feathers rewrite=/api/"
spec:
  backend:
    serviceName: angular-nginx-service
    servicePort: 80
  rules:
  - http:
      paths:
      - path: /*
        backend:
          serviceName: angular-nginx-service
          servicePort: 80
      # REST based feathers API
      - path: /api/*
        backend:
          serviceName: feathers
          servicePort: 3030
      # WS based feathers API
      - path: /socket.io/*
        backend:
          serviceName: feathers
          servicePort: 3030

---

# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: feathers-ingress
#   annotations:
#     ingress.kubernetes.io/rewrite-target: /
# spec:
#   rules:
#   - http:
#       paths:
#       - path: /api
#         backend:
#           serviceName: feathers
#           servicePort: 3030

---
# apiVersion: v1
# kind: Service
# metadata:
#   name: echoheaders
#   labels:
#     app: echoheaders
# spec:
#   ports:
#   - port: 80
#     targetPort: 8080
#     protocol: TCP
#     name: http
#   selector:
#     app: echoheaders
